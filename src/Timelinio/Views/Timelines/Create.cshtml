@model Timelinio.Models.Timeline

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<form asp-action="Create">
    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="BeginDate" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="BeginDate" class="form-control" type="date" />
                <span asp-validation-for="BeginDate" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="EndDate" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="EndDate" class="form-control" type="date" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Title" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Description" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="FocusID" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                @Html.DropDownList("FocusID", (IEnumerable<SelectListItem>)ViewBag.FocusID )
                <span id="createNewFocus" class="btn-default">Add new focus</span>
                <span asp-validation-for="FocusID" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>

    var focusButton = document.getElementById('createNewFocus');

    focusButton.addEventListener("click", function (event) {
        console.log('clickity clackity');
        var selectMenu = document.getElementById("FocusID");
        var name = prompt("What is the name of this new focus?");
        var description = prompt("Please provide a description for " + name + ", the new focus.")
        var xmlHttp;
        //Let us create the XML http object  
        xmlHttp = null;

        if (window.XMLHttpRequest) {
            //for new browsers  
            xmlHttp = new XMLHttpRequest();
        }
        else if (window.ActiveXObject) {
            //for old ones  
            //xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");  
            var strName = "Msxml2.XMLHTTP"
            if (navigator.appVersion.indexOf("MSIE 5.5") >= 0) {
                strName = "Microsoft.XMLHTTP"
            }
            try {
                xmlHttp = new ActiveXObject(strName);
            }
            catch (e) {
                alert("Error. Scripting for ActiveX might be disabled")
                return false;
            }
        }

        if (xmlHttp != null) {
            //Handle the response of this async request we just made(subscribe to callback)  
            //xmlHttp.onreadystatechange = state_Change;  
            var userName = "manasm";

            xmlHttp.onreadystatechange = function () {
                //alert(xmlHttp.readyState);
                if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
                    //alert(xmlHttp.responseText);
                    var focusObject = JSON.parse(xmlHttp.responseText);
                    var name = focusObject.name;
                    var focusId = focusObject.focusID;
                    var option = document.createElement("option");
                    option.text = name;
                    option.value = focusId;
                    option.selected = true;
                    selectMenu.add(option);
                }
            }

            //Pass the value to a web page on server as query string using XMLHttpObject.  
            xmlHttp.open("POST", "MyAjaxPOST", true);
            //var parameters = "userName=XXX";  
            xmlHttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xmlHttp.send("Name=" + name + "&Description=" + description);
        }
    });

</script>